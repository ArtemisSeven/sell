<?xml version="1.0" encoding="UTF-8" ?>
<!--
此日志配置文件实现的功能：
-->
<configuration>
    <!--（1）在控制台输出日志信息，设置打印的日志信息的格式-->
    <appender name="consoleLog" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>
                %d - %msg%n
            </pattern>
        </layout>
    </appender>
    <!--（2）info级别的日志单独存放，即如果命中ERROR级别，DENY不打印，否则ACCEPT打印-->
    <appender name="fileInfoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <encoder>
            <pattern>
                %d %msg%n
            </pattern>
        </encoder>
        <!--滚动策略，按时间滚动，每天一份日志文件-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--存放日志的路径,需要加.表示存放在当前路径，否则报权限错误-->
            <fileNamePattern>./log/info.%d.log</fileNamePattern>
        </rollingPolicy>
    </appender>
    <!--（3）ERROR级别的日志也单独存放，每天一份日志文件-->
    <appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <encoder>
            <pattern>
                %d %msg%n
            </pattern>
        </encoder>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--路径-->
            <fileNamePattern>./log/error.%d.log</fileNamePattern>
        </rollingPolicy>
    </appender>
    <!--（4）最后需要引用上面的配置，配置才会生效-->
    <root level="info">
        <appender-ref ref="consoleLog" />
        <appender-ref ref="fileInfoLog" />
        <appender-ref ref="fileErrorLog" />
    </root>
</configuration>